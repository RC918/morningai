name: backend-ci
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  validate-env-schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install pyyaml
      - name: Validate environment schema
        run: |
          python - <<'EOF'
          import yaml
          import sys
          
          with open('config/env.schema.yaml', 'r') as f:
              schema = yaml.safe_load(f)
          
          required_keys = ['version', 'description', 'fields']
          for key in required_keys:
              if key not in schema:
                  print(f"❌ Missing required key: {key}")
                  sys.exit(1)
          
          errors = []
          for var_name, var_config in schema['fields'].items():
              if 'type' not in var_config:
                  errors.append(f"{var_name}: missing 'type'")
              if 'description' not in var_config or not var_config['description']:
                  errors.append(f"{var_name}: missing 'description'")
              if 'category' not in var_config:
                  errors.append(f"{var_name}: missing 'category'")
          
          if errors:
              print("❌ Schema validation errors:")
              for error in errors:
                  print(f"  - {error}")
              sys.exit(1)
          
          print(f"✅ Schema valid: {len(schema['fields'])} variables defined")
          EOF
  test:
    needs: validate-env-schema
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.x'
      - name: Install dependencies
        run: |
          cd handoff/20250928/40_App/api-backend
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
          cd ../orchestrator
          pip install -e .
      - name: Run tests with coverage
        env:
          REDIS_URL: redis://localhost:6379/0
        run: |
          cd handoff/20250928/40_App/api-backend
          python -m pytest --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=75 -v
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: handoff/20250928/40_App/api-backend/coverage.xml
          retention-days: 30
