name: Secret Scanning

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Only fetch commits in PR for faster scanning
          # Full history scan only on manual trigger or main branch
          fetch-depth: ${{ github.event_name == 'pull_request' && 100 || 0 }}

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}  # Optional: for Gitleaks Pro features

      - name: Upload Gitleaks Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          retention-days: 7

  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Only fetch commits in PR for faster scanning
          fetch-depth: ${{ github.event_name == 'pull_request' && 100 || 0 }}

      - name: Run TruffleHog (PR - Incremental Scan)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

      - name: Run TruffleHog (Main/Manual - Full Scan)
        if: github.event_name != 'pull_request'
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          path: ./
          base: ""
          head: HEAD
          extra_args: --only-verified

      - name: Upload TruffleHog Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-report
          path: results.json
          retention-days: 7
          if-no-files-found: ignore

  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [gitleaks, trufflehog]
    if: always()
    steps:
      - name: Check scan results and generate metrics
        run: |
          # Record scan start time for metrics
          SCAN_START_TIME="${{ github.event.head_commit.timestamp }}"
          SCAN_END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          echo "## üîí Secret Scanning Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Configuration:**" >> $GITHUB_STEP_SUMMARY
          echo "- TruffleHog Version: v3.82.13 (pinned)" >> $GITHUB_STEP_SUMMARY
          echo "- Gitleaks Version: v2 (latest stable)" >> $GITHUB_STEP_SUMMARY
          echo "- Scan Type: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Fetch Depth: ${{ github.event_name == 'pull_request' && '100 commits' || 'Full history' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.gitleaks.result }}" == "success" ]; then
            echo "‚úÖ **Gitleaks**: No secrets detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Gitleaks**: Secrets detected! Review the logs." >> $GITHUB_STEP_SUMMARY
            echo "   - Check artifacts for detailed report" >> $GITHUB_STEP_SUMMARY
            echo "   - Review .gitleaksignore if false positive" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.trufflehog.result }}" == "success" ]; then
            echo "‚úÖ **TruffleHog**: No verified secrets detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **TruffleHog**: Potential secrets detected! Review the logs." >> $GITHUB_STEP_SUMMARY
            echo "   - Only verified secrets are reported (--only-verified)" >> $GITHUB_STEP_SUMMARY
            echo "   - Unverified secrets may still be sensitive" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Scan Metrics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow Run: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìã Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "If secrets were detected:" >> $GITHUB_STEP_SUMMARY
          echo "1. **DO NOT** commit the secrets" >> $GITHUB_STEP_SUMMARY
          echo "2. Rotate all exposed credentials immediately" >> $GITHUB_STEP_SUMMARY
          echo "3. Use environment variables or secret management" >> $GITHUB_STEP_SUMMARY
          echo "4. Add **SPECIFIC** false positives to .gitleaksignore (file:rule:line)" >> $GITHUB_STEP_SUMMARY
          echo "5. Review .gitleaks.toml for allowlist configuration" >> $GITHUB_STEP_SUMMARY
          
          # Fail if either scan failed
          if [ "${{ needs.gitleaks.result }}" != "success" ]; then
            echo "::error::Gitleaks detected secrets in the codebase"
            exit 1
          fi
          
          # Warning if TruffleHog failed (but don't block - only verified secrets)
          if [ "${{ needs.trufflehog.result }}" != "success" ]; then
            echo "::warning::TruffleHog detected potential secrets - review recommended"
          fi

  # Block PR merge if secrets are detected
  block-merge:
    name: Block Merge on Secret Detection
    runs-on: ubuntu-latest
    needs: [gitleaks, trufflehog]
    if: github.event_name == 'pull_request'
    steps:
      - name: Check for secrets
        run: |
          if [ "${{ needs.gitleaks.result }}" != "success" ]; then
            echo "::error::‚ùå PR blocked: Secrets detected by Gitleaks"
            echo "Please remove all secrets before merging."
            exit 1
          fi
          
          echo "‚úÖ No secrets detected - PR can be merged"
