name: Agent Tests

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'agents/**'
      - '.github/workflows/test-agents.yml'
  pull_request:
    branches: [main]
    paths:
      - 'agents/**'
      - '.github/workflows/test-agents.yml'

jobs:
  test-faq-agent:
    name: FAQ Agent Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 3s
          --health-retries 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        working-directory: agents/faq_agent
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install api-backend dependencies (required for importing Flask routes)
          if [ -f ../../handoff/20250928/40_App/api-backend/requirements.txt ]; then 
            pip install -r ../../handoff/20250928/40_App/api-backend/requirements.txt
          fi
      
      - name: Run FAQ Agent tests
        working-directory: agents/faq_agent
        run: |
          pytest tests/ -v --tb=short --disable-warnings
        env:
          PYTHONPATH: ${{ github.workspace }}/agents/faq_agent:${{ github.workspace }}/handoff/20250928/40_App/api-backend/src:${{ github.workspace }}/handoff/20250928/40_App/api-backend:${{ github.workspace }}
          REDIS_URL: redis://localhost:6379/0
          JWT_SECRET_KEY: test-secret-key-for-ci
          TESTING: true
  
  test-ops-agent:
    name: Ops Agent Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 3s
          --health-retries 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        working-directory: agents/ops_agent
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install api-backend dependencies (required for importing Flask routes)
          if [ -f ../../handoff/20250928/40_App/api-backend/requirements.txt ]; then 
            pip install -r ../../handoff/20250928/40_App/api-backend/requirements.txt
          fi
      
      - name: Run Ops Agent tests
        working-directory: agents/ops_agent
        run: |
          pytest tests/ -v --tb=short --disable-warnings
        env:
          PYTHONPATH: ${{ github.workspace }}/agents/ops_agent:${{ github.workspace }}/handoff/20250928/40_App/api-backend/src:${{ github.workspace }}/handoff/20250928/40_App/api-backend:${{ github.workspace }}
          REDIS_URL: redis://localhost:6379/0
          TESTING: true
  
  test-dev-agent:
    name: Dev Agent Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 3s
          --health-retries 20
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 3s
          --health-retries 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        working-directory: agents/dev_agent
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install api-backend dependencies (required for importing Flask routes)
          if [ -f ../../handoff/20250928/40_App/api-backend/requirements.txt ]; then 
            pip install -r ../../handoff/20250928/40_App/api-backend/requirements.txt
          fi
      
      - name: Run Dev Agent tests
        working-directory: agents/dev_agent
        run: |
          pytest tests/ -v --tb=short --disable-warnings
        env:
          PYTHONPATH: ${{ github.workspace }}/agents/dev_agent:${{ github.workspace }}/handoff/20250928/40_App/api-backend/src:${{ github.workspace }}/handoff/20250928/40_App/api-backend:${{ github.workspace }}
          REDIS_URL: redis://localhost:6379/0
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TESTING: true
